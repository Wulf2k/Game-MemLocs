string hashLookup( uint &hash )
{
   switch (hash)
   {
case 0x001030C1: return "Acc"; break;
case 0x1BF49679: return "Accuracy Radius"; break;
case 0x501A6D9E: return "Action Zoon"; break;
case 0x0DF59C86: return "Active"; break;
case 0x556A7BC2: return "Adult Entity Name"; break;
case 0x0B5F9B04: return "Adult Scale"; break;
case 0x01B45CA9: return "AI Damage Mult"; break;
case 0xD2AF2A3B: return "AI Mode"; break;
case 0x9D7A8AD0: return "AI Recovery Time Mult"; break;
case 0x85DDD56F: return "Aim Joint"; break;
case 0x1189846C: return "Aim Speed"; break;
case 0x7A428985: return "AIMJOINT"; break;
case 0xC49BAA12: return "Air Break Bonus Template"; break;
case 0x90A77A8F: return "Air Impulse Away"; break;
case 0xC8FB081B: return "Air Impulse Right"; break;
case 0xDAEA8ADC: return "Air Impulse Up"; break;
case 0xA10AF515: return "Air Orb Emitter Template 2"; break;
case 0xA10AF516: return "Air Orb Emitter Template 3"; break;
case 0x49322803: return "Air Orb Emitter Template"; break;
case 0x400232CE: return "AlertRadius"; break;
case 0x8421B32C: return "Allow God Mode Inf Magic"; break;
case 0x928C38DE: return "Allow God Mode"; break;
case 0x34CCAFE6: return "Allow Movement"; break;
case 0xFD2C643E: return "Alpha"; break;
case 0x53674FDA: return "Ambient Streams (U1)"; break;
case 0x1A0F7552: return "Ambient UW nomod(U10)"; break;
case 0xA86B3138: return "Amount"; break;
case 0x97F053D6: return "Angle Amplitude"; break;
case 0x15C812E1: return "Angle of View"; break;
case 0xFD68B233: return "Angle"; break;
case 0x2DEA83BB: return "ANIBalanceCatch"; break;
case 0x51E51C0C: return "ANIBalancePullupL"; break;
case 0x51E51C12: return "ANIBalancePullupR"; break;
case 0xA4102D29: return "ANIBalanceWalk"; break;
case 0xDD3A7018: return "ANIBRope"; break;
case 0xBFFD9C2E: return "ANIBRopeF"; break;
case 0xEFE71979: return "ANIClimb"; break;
case 0xCF2C0104: return "ANIClimbAL"; break;
case 0x3FB27898: return "ANIClimbALIdle"; break;
case 0xCF2C010A: return "ANIClimbAR"; break;
case 0x9CBB6C9E: return "ANIClimbARIdle"; break;
case 0xCF2C0202: return "ANIClimbCL"; break;
case 0xCF2C0208: return "ANIClimbCR"; break;
case 0xA46C270D: return "ANIClimbIdle"; break;
case 0x6F39C487: return "ANICrankIdle"; break;
case 0x7018BE18: return "ANICrankPull"; break;
case 0x9C464E34: return "ANICrankPullL"; break;
case 0x9C464E3A: return "ANICrankPullR"; break;
case 0x7018C18D: return "ANICrankPush"; break;
case 0x9C48053F: return "ANICrankPushL"; break;
case 0x9C480545: return "ANICrankPushR"; break;
case 0xC3606630: return "ANICSM1"; break;
case 0xC3606631: return "ANICSM2"; break;
case 0xFA09FB2D: return "ANIDblFall"; break;
case 0xFA8BEDC0: return "ANIDblJump"; break;
case 0xFF0E01E1: return "ANIDive1"; break;
case 0xFF0E01E2: return "ANIDive2"; break;
case 0x531604E2: return "ANIDiveDash"; break;
case 0x37EC6C61: return "ANIDiveDashC"; break;
case 0xBE49C468: return "ANIDiveDashCI"; break;
case 0xC3C1AC57: return "ANIFall"; break;
case 0xC3C467AB: return "ANIFlyB"; break;
case 0xC3C467AF: return "ANIFlyF"; break;
case 0xC3C467B1: return "ANIFlyH"; break;
case 0xC3C467B5: return "ANIFlyL"; break;
case 0xC3C467BB: return "ANIFlyR"; break;
case 0x70A966F9: return "ANIHighFall"; break;
case 0x7164F0E9: return "ANIHighLand"; break;
case 0xC4439EEA: return "ANIJump"; break;
case 0xCA422169: return "ANIKickBox"; break;
case 0x5C9F4EFD: return "ANIKickBoxIdle"; break;
case 0x93A052DE: return "ANILadder"; break;
case 0x3C891C66: return "ANILadderD"; break;
case 0x3C891C77: return "ANILadderU"; break;
case 0xC47D3647: return "ANILand"; break;
case 0x76924E73: return "ANILDis1"; break;
case 0x76924E74: return "ANILDis2"; break;
case 0x7A9CEC2E: return "ANILever"; break;
case 0xBB86B541: return "ANILSlide"; break;
case 0xB5CCDCFA: return "Anim Name"; break;
case 0xB649E66F: return "Anim Rate"; break;
case 0xBA96406C: return "ANIPushB"; break;
case 0xBA964070: return "ANIPushF"; break;
case 0xBA964073: return "ANIPushI"; break;
case 0xBA964076: return "ANIPushL"; break;
case 0xBA96407C: return "ANIPushR"; break;
case 0xC53C324E: return "ANIRope"; break;
case 0xD8DCF4F6: return "ANIRopeD"; break;
case 0x5A4F15E2: return "ANIRopeIdle"; break;
case 0x39295B5F: return "ANIRopeSW1"; break;
case 0x39295B60: return "ANIRopeSW2"; break;
case 0x39295B61: return "ANIRopeSW3"; break;
case 0x39295B62: return "ANIRopeSW4"; break;
case 0x4D759F70: return "ANIRopeSWStart"; break;
case 0xD8DCF507: return "ANIRopeU"; break;
case 0xE2F7C43B: return "ANIRSlide"; break;
case 0xE2F7C43B: return "ANIRSlide"; break;
case 0xE7FEF515: return "ANISlide"; break;
case 0xE8F70DFA: return "ANIStand"; break;
case 0xB1E8FA9F: return "ANIStartKickBox"; break;
case 0xBB6B4EF7: return "ANIStrafeB"; break;
case 0xBB6B4EFB: return "ANIStrafeF"; break;
case 0xBB6B4F01: return "ANIStrafeL"; break;
case 0xBB6B4F07: return "ANIStrafeR"; break;
case 0xC55D6864: return "ANISwim"; break;
case 0x3E251FF8: return "ANISwimIdle"; break;
case 0x1EC4E62A: return "ANITandF1"; break;
case 0x1EC4E62B: return "ANITandF2"; break;
case 0x1EC4E62C: return "ANITandF3"; break;
case 0xF83AFE8E: return "ANITread"; break;
case 0xA3529CB6: return "ANITreadSwim"; break;
case 0xFD96531A: return "ANITurnOnSpot"; break;
case 0x35C342AC: return "ANIUWLever"; break;
case 0x8168324F: return "ANIVDblFall"; break;
case 0x81EA24E2: return "ANIVDblJump"; break;
case 0x11DDC235: return "ANIVFall"; break;
case 0x125FB4C8: return "ANIVJump"; break;
case 0x12994C25: return "ANIVLand"; break;
case 0xC5D505C5: return "ANIWalk"; break;
case 0x29996D6D: return "ANIWallBack"; break;
case 0xA31D495F: return "ANIWallBackL"; break;
case 0xA31D4965: return "ANIWallBackR"; break;
case 0xB2A2F295: return "ANIWallCatch"; break;
case 0xE3399083: return "ANIWallFront"; break;
case 0xB98EB149: return "ANIWallFrontL"; break;
case 0xB98EB14F: return "ANIWallFrontR"; break;
case 0x2A54FBD8: return "ANIWallHang"; break;
case 0x9D5D2983: return "ANIWallHangCatch"; break;
case 0x0028F074: return "ANIWallHangL"; break;
case 0x0028F07A: return "ANIWallHangR"; break;
case 0xD41C0266: return "ANIWallPullup"; break;
case 0x21E132C9: return "ANIWJump"; break;
case 0x7ACE44B9: return "ANIZipLine"; break;
case 0xA2C359E9: return "Anticipate Jump Time"; break;
case 0xFBFCB4EC: return "Armor Stagger"; break;
case 0x32F71072: return "Armor Stunned"; break;
case 0x6217302A: return "Arrow Sound Index"; break;
case 0xE239BC51: return "Arrow Template"; break;
case 0x0B404E79: return "Attach Hit Effect"; break;
case 0xC6DD46A4: return "Attached"; break;
case 0x158CF928: return "Attack"; break;
case 0x3A05C371: return "Attract Radius"; break;
case 0xD0053B6C: return "Attract Time"; break;
case 0x69674EF6: return "Auto Aim Damping"; break;
case 0xB5134762: return "Auto Smash Time"; break;
case 0x0FA79C82: return "Away Mult"; break;
case 0x98572077: return "BackPlane_A"; break;
case 0xFAD969DC: return "Balance"; break;
case 0xE4B3A801: return "Base Reverb"; break;
case 0x30E88FC6: return "bay floor"; break;
case 0x28DBC614: return "Behind Close Dist"; break;
case 0x27F351D1: return "BiPinnedRope"; break;
case 0x99894F17: return "Blade Collision Tolerance"; break;
case 0x9903C1DA: return "Blade Damping"; break;
case 0x7F353CCC: return "Blade Scale In Hand"; break;
case 0x0F901C6A: return "Blade Scale On Back"; break;
case 0x4D06779F: return "Blade Scale Out Hand"; break;
case 0x8DC4C112: return "Blend Mode"; break;
case 0x7C3C9275: return "Block Down"; break;
case 0xD0D4210C: return "Block Impulse Away"; break;
case 0x9F21A01E: return "Block Impulse Right"; break;
case 0x131B6E59: return "Block Impulse Up"; break;
case 0xE9B40E3D: return "Block Modifier Tweaks"; break;
case 0x8AA28C7C: return "Block Sound"; break;
case 0x0CADA0CD: return "Block"; break;
case 0xC5BB9615: return "Blood Drop"; break;
case 0xC2530EDB: return "Bonus Template"; break;
case 0x0D0B2F3F: return "Bonus"; break;
case 0xEC47E8F6: return "Boom Ratio"; break;
case 0xEA273553: return "boom speed in"; break;
case 0x2974F220: return "boom speed out"; break;
case 0x7947B8AB: return "Bottom"; break;
case 0x1FB9EAB2: return "Bottom:A"; break;
case 0x1FB9EAB3: return "Bottom:B"; break;
case 0x1FB9EAB8: return "Bottom:G"; break;
case 0x1FB9EAC3: return "Bottom:R"; break;
case 0xB83947A5: return "BottomPoint"; break;
case 0x5276110F: return "bowl base"; break;
case 0xF33B1671: return "bowl centre x"; break;
case 0xF33B1673: return "bowl centre z"; break;
case 0x9BB4FD82: return "bowl h delta"; break;
case 0x72AD4A10: return "bowl radius"; break;
case 0xF182AECD: return "bowl slope"; break;
case 0x1F59F04A: return "Brace Spring Constant"; break;
case 0x893D4E1C: return "Brace Spring Damping"; break;
case 0x350A54BC: return "Break Bonus Template"; break;
case 0xE88FDA39: return "Breakable"; break;
case 0xD650ACB2: return "Button"; break;
case 0xECEE9186: return "Camera Target Radius"; break;
case 0xA1C3D90C: return "Camera Target Weight"; break;
case 0x5C74B085: return "CAMPOS"; break;
case 0x8396E448: return "Center Angle"; break;
case 0xCEA9063F: return "CentreZ"; break;
case 0x452D9A3D: return "ChangeTime"; break;
case 0x91FA5EC0: return "ChangeWindow"; break;
case 0x72949419: return "ChaseSpeed"; break;
case 0x0C67F4F9: return "Chest Type"; break;
case 0xCCBD0C11: return "Cinema"; break;
case 0x24BB9B07: return "Circle Health Threshold 0"; break;
case 0x24BB9B08: return "Circle Health Threshold 1"; break;
case 0x24BB9B09: return "Circle Health Threshold 2"; break;
case 0x24BB9B0A: return "Circle Health Threshold 3"; break;
case 0x24BB9B0B: return "Circle Health Threshold 4"; break;
case 0x24BB9B0C: return "Circle Health Threshold 5"; break;
case 0x33FFC1F7: return "Circle Health Threshold"; break;
case 0x5CB5773A: return "Circle Scale"; break;
case 0x0A405D82: return "Circle Sound Delay"; break;
case 0xAA7CDA8B: return "Circle X Offset"; break;
case 0x7ED79E0A: return "Circle Y Offset"; break;
case 0x53326189: return "Circle Z Offset"; break;
case 0xC75A6A52: return "Clamp Num Part"; break;
case 0xE2938AA9: return "Clamp Part Size"; break;
case 0x135699A9: return "Clamp Spread Size"; break;
case 0x1C2DA9B5: return "Climb"; break;
case 0x1FC3342D: return "Climbing"; break;
case 0x875A1866: return "Close Mid Dist"; break;
case 0x56E11996: return "ClothMassMax"; break;
case 0x56E11D84: return "ClothMassMin"; break;
case 0x00348FDA: return "CollisionBounce"; break;
case 0x199EAC0B: return "CollisionSphereScale"; break;
case 0xDC7238C6: return "Concussion Index"; break;
case 0x0849ACA3: return "Cone"; break;
case 0xF919B6FA: return "Context 0 Limit"; break;
case 0x3D23CE1E: return "Context 0 Min Block"; break;
case 0x1BEF7071: return "Context 0 Min"; break;
case 0xEB8316BF: return "Context 0"; break;
case 0xE69D73FB: return "Context 1 Limit"; break;
case 0x4E2F091F: return "Context 1 Min Block"; break;
case 0x2B70EE72: return "Context 1 Min"; break;
case 0xEB8316C0: return "Context 1"; break;
case 0xBB0CF5AF: return "Context"; break;
case 0xF1F9724A: return "Control Tween Safety"; break;
case 0x6C8DFD0F: return "Control Tween Speed"; break;
case 0x6FF05D33: return "Control Tween Threshold"; break;
case 0x6340FB6D: return "Costume #0"; break;
case 0x6340FB6E: return "Costume #1"; break;
case 0x6340FB6F: return "Costume #2"; break;
case 0x6340FB70: return "Costume #3"; break;
case 0x6340FB71: return "Costume #4"; break;
case 0x6340FB72: return "Costume #5"; break;
case 0x1C8E62CF: return "Count"; break;
case 0x4949C244: return "CullRadius"; break;
case 0x728F3149: return "Damage Freq"; break;
case 0x736ABC41: return "Damage Mult"; break;
case 0x4AD50B52: return "Damage Multiplier"; break;
case 0xB9E8DC09: return "Damage Per Armor Stage"; break;
case 0x29B16E07: return "Damage Per Vent Stage"; break;
case 0x01CE5E0F: return "Damage"; break;
case 0x2943BC8E: return "DampGravity"; break;
case 0x112AF47F: return "DblJmp"; break;
case 0xA3E3F788: return "Dead Zone"; break;
case 0x04BC8822: return "Death Menu Time"; break;
case 0x2AD268B4: return "Death"; break;
case 0xC97548FE: return "Deaths Before Easy Offer"; break;
case 0x0010EEC2: return "Dec"; break;
case 0x2AD2DD5A: return "Decay"; break;
case 0xFDA8A63A: return "DecisionTree"; break;
case 0xC086E0B4: return "DecisionTreeTemplate"; break;
case 0x4867D77B: return "Deflect Arrows"; break;
case 0x3F23934F: return "Deflect"; break;
case 0x5DFC4510: return "DeflectStraightBack"; break;
case 0x4036C7EE: return "Depth1"; break;
case 0x4036C7EF: return "Depth2"; break;
case 0x79F99224: return "Directionality"; break;
case 0x9ED04AE0: return "Distance Force"; break;
case 0x13E95531: return "distance min weight"; break;
case 0x23423D67: return "distance min"; break;
case 0x84663FB5: return "Distance"; break;
case 0x08677814: return "Dive"; break;
case 0xABFACEA6: return "DiveDash"; break;
case 0x4ED25AC3: return "DiveIntoWater"; break;
case 0xD2A65D12: return "Dmg Mult"; break;
case 0x2C0BAE37: return "Dodge"; break;
case 0xA39AE370: return "Dolly Damping"; break;
case 0x4FF835F8: return "dolly rot angle"; break;
case 0xF9EDD120: return "dolly rot limit"; break;
case 0x5C1BD8D3: return "dolly rot weight"; break;
case 0xBBBC439A: return "Don't Reaquire"; break;
case 0xF5428B89: return "Doppler Limit"; break;
case 0xC718584E: return "Doppler"; break;
case 0x05B48BBD: return "Double Jump"; break;
case 0xC0284617: return "Down Angle Degree"; break;
case 0x71BFA948: return "Driven Animation"; break;
case 0x08EFE044: return "Driven"; break;
case 0x23D21C86: return "Drop Blood Idx"; break;
case 0x1E14D549: return "Drop Blood"; break;
case 0x66D8AC48: return "Dry Effects (U12)"; break;
case 0xD109E694: return "Duration"; break;
case 0x92A7DFBF: return "Dynamic"; break;
case 0xFB467BFA: return "dynamic_friction"; break;
case 0xE7A93EFA: return "Effect Name"; break;
case 0xD714AEBC: return "EffectName"; break;
case 0x0761DE40: return "Elevation Constraint"; break;
case 0x591266A6: return "Elevation Mode"; break;
case 0xEAD4989D: return "Elevation"; break;
case 0x1EFA1BFA: return "Emit Time"; break;
case 0xBD2B62F8: return "Emitter Joint"; break;
case 0x88BFC764: return "Emitter Radius"; break;
case 0x63C6CACD: return "Emitter Rotate"; break;
case 0x07D7EA5C: return "Emitter Translate"; break;
case 0x56BA0296: return "End Effect"; break;
case 0x0011323B: return "End"; break;
case 0xA7215288: return "Entity Name"; break;
case 0xEED31206: return "Exp Points"; break;
case 0xB73DC23A: return "Extra GO 0 Cap"; break;
case 0xE8FB2A23: return "Extra GO 0 Name"; break;
case 0xC6BF403B: return "Extra GO 1 Cap"; break;
case 0x9A38ACA2: return "Extra GO 1 Name"; break;
case 0xD640BE3C: return "Extra GO 2 Cap"; break;
case 0x4B762F21: return "Extra GO 2 Name"; break;
case 0xE5C23C3D: return "Extra GO 3 Cap"; break;
case 0xFCB3B1A0: return "Extra GO 3 Name"; break;
case 0xF543BA3E: return "Extra GO 4 Cap"; break;
case 0xADF1341F: return "Extra GO 4 Name"; break;
case 0x04C5383F: return "Extra GO 5 Cap"; break;
case 0x5F2EB69E: return "Extra GO 5 Name"; break;
case 0x0B04A6E1: return "f line angle"; break;
case 0xCB0AC773: return "f line symetrical"; break;
case 0x2747DC6A: return "f line weight"; break;
case 0x74623D84: return "Fade In Time"; break;
case 0x34C726E3: return "Fade Out Time"; break;
case 0x7D929791: return "Fade Time"; break;
case 0xC25F1112: return "Fall Time"; break;
case 0x08A3FE1B: return "Fall"; break;
case 0xB23EF8C7: return "Falling"; break;
case 0x62D4F60B: return "Family Distract Time"; break;
case 0x2972BD74: return "Far Walk Dist"; break;
case 0xB9FFCBE2: return "Fight Radius"; break;
case 0xE036EA2C: return "File 0"; break;
case 0xE036EA2D: return "File 1"; break;
case 0xE036EA2E: return "File 2"; break;
case 0xE036EA2F: return "File 3"; break;
case 0xE036EA30: return "File 4"; break;
case 0xE036EA31: return "File 5"; break;
case 0xE036EA32: return "File 6"; break;
case 0xE036EA33: return "File 7"; break;
case 0x5963A0E2: return "Filter Template"; break;
case 0x8743C048: return "Final Sync Joint Y"; break;
case 0x7E7FD1EC: return "Find Close Wpt"; break;
case 0xCF615F41: return "First Contact Move"; break;
case 0xCCD18755: return "Flash Anim Pos"; break;
case 0x8E006FFF: return "Flatten Cone"; break;
case 0xA0BD04EF: return "Flatten Force"; break;
case 0x79721B17: return "Flight Height"; break;
case 0x4AB397DC: return "Float"; break;
case 0x2F2CE2C7: return "Flourish Sound"; break;
case 0x00117053: return "Fly"; break;
case 0x1052DA8F: return "Flying"; break;
case 0x7CCB68F4: return "Focus Zone"; break;
case 0x2A8107DC: return "Fog Template"; break;
case 0x4B0F6320: return "Fog_A"; break;
case 0x4B0F6321: return "Fog_B"; break;
case 0x4B0F6326: return "Fog_G"; break;
case 0x4B0F6331: return "Fog_R"; break;
case 0x3D41BEB1: return "Follow"; break;
case 0x25F57A5D: return "Foot Sound"; break;
case 0xC030328A: return "Footsteps (U3)"; break;
case 0xB36FF1C2: return "Force Action Time"; break;
case 0xFBD4957A: return "Force Feedback"; break;
case 0x1A55BA55: return "Frames Till Lost"; break;
case 0xCBB7BB38: return "Freeze Factor"; break;
case 0x6AE9BA97: return "Freeze"; break;
case 0xA305BAC6: return "FreezeFactor"; break;
case 0xFC12D3DC: return "Frequency"; break;
case 0x7419DDA0: return "Frozen Invulnerable Time"; break;
case 0x93BE8101: return "Full Volume Y Vel"; break;
case 0xD8F85499: return "FX Name"; break;
case 0x18174FD6: return "FX Start Mod"; break;
case 0xF469F079: return "FX Start Time"; break;
case 0x11F28939: return "Generic Hit Sound"; break;
case 0x55637E92: return "Get Stuck"; break;
case 0xEC1EF545: return "Global Damping"; break;
case 0x05DF7640: return "Glow Diameter"; break;
case 0xCFFD9D92: return "GO 1 Name"; break;
case 0x770FE314: return "GO 10 Name"; break;
case 0x284D6593: return "GO 11 Name"; break;
case 0xD98AE812: return "GO 12 Name"; break;
case 0x8AC86A91: return "GO 13 Name"; break;
case 0x3C05ED10: return "GO 14 Name"; break;
case 0xED436F8F: return "GO 15 Name"; break;
case 0x9E80F20E: return "GO 16 Name"; break;
case 0x4FBE748D: return "GO 17 Name"; break;
case 0x00FBF70C: return "GO 18 Name"; break;
case 0xB239798B: return "GO 19 Name"; break;
case 0x813B2011: return "GO 2 Name"; break;
case 0x6493A015: return "GO 20 Name"; break;
case 0x15D12294: return "GO 21 Name"; break;
case 0xC70EA513: return "GO 22 Name"; break;
case 0x784C2792: return "GO 23 Name"; break;
case 0x2989AA11: return "GO 24 Name"; break;
case 0xDAC72C90: return "GO 25 Name"; break;
case 0x8C04AF0F: return "GO 26 Name"; break;
case 0x3D42318E: return "GO 27 Name"; break;
case 0xEE7FB40D: return "GO 28 Name"; break;
case 0x9FBD368C: return "GO 29 Name"; break;
case 0x3278A290: return "GO 3 Name"; break;
case 0x52175D16: return "GO 30 Name"; break;
case 0x0354DF95: return "GO 31 Name"; break;
case 0xB4926214: return "GO 32 Name"; break;
case 0x65CFE493: return "GO 33 Name"; break;
case 0x170D6712: return "GO 34 Name"; break;
case 0xC84AE991: return "GO 35 Name"; break;
case 0x79886C10: return "GO 36 Name"; break;
case 0x2AC5EE8F: return "GO 37 Name"; break;
case 0xDC03710E: return "GO 38 Name"; break;
case 0x8D40F38D: return "GO 39 Name"; break;
case 0xE3B6250F: return "GO 4 Name"; break;
case 0x3F9B1A17: return "GO 40 Name"; break;
case 0xF0D89C96: return "GO 41 Name"; break;
case 0xA2161F15: return "GO 42 Name"; break;
case 0x5353A194: return "GO 43 Name"; break;
case 0x04912413: return "GO 44 Name"; break;
case 0xB5CEA692: return "GO 45 Name"; break;
case 0x670C2911: return "GO 46 Name"; break;
case 0x1849AB90: return "GO 47 Name"; break;
case 0xC9872E0F: return "GO 48 Name"; break;
case 0x7AC4B08E: return "GO 49 Name"; break;
case 0x94F3A78E: return "GO 5 Name"; break;
case 0x2D1ED718: return "GO 50 Name"; break;
case 0xDE5C5997: return "GO 51 Name"; break;
case 0x8F99DC16: return "GO 52 Name"; break;
case 0x40D75E95: return "GO 53 Name"; break;
case 0xF214E114: return "GO 54 Name"; break;
case 0xA3526393: return "GO 55 Name"; break;
case 0x548FE612: return "GO 56 Name"; break;
case 0x05CD6891: return "GO 57 Name"; break;
case 0xB70AEB10: return "GO 58 Name"; break;
case 0x68486D8F: return "GO 59 Name"; break;
case 0x46312A0D: return "GO 6 Name"; break;
case 0x1AA29419: return "GO 60 Name"; break;
case 0xCBE01698: return "GO 61 Name"; break;
case 0x7D1D9917: return "GO 62 Name"; break;
case 0x2E5B1B96: return "GO 63 Name"; break;
case 0xDF989E15: return "GO 64 Name"; break;
case 0x90D62094: return "GO 65 Name"; break;
case 0x4213A313: return "GO 66 Name"; break;
case 0xF3512592: return "GO 67 Name"; break;
case 0xA48EA811: return "GO 68 Name"; break;
case 0x55CC2A90: return "GO 69 Name"; break;
case 0xF76EAC8C: return "GO 7 Name"; break;
case 0x0826511A: return "GO 70 Name"; break;
case 0xB963D399: return "GO 71 Name"; break;
case 0x6AA15618: return "GO 72 Name"; break;
case 0x1BDED897: return "GO 73 Name"; break;
case 0xA8AC2F0B: return "GO 8 Name"; break;
case 0x59E9B18A: return "GO 9 Name"; break;
case 0x8B527B23: return "GO Name"; break;
case 0x8B1F35BB: return "GOAORED"; break;
case 0x8B1FB5C9: return "GOAOTIT"; break;
case 0x8B20ADD3: return "GOAOXAR"; break;
case 0x8B20AF47: return "GOAOXDI"; break;
case 0x8B20B02D: return "GOAOXF1"; break;
case 0x8B20B02E: return "GOAOXF2"; break;
case 0x8B20B02F: return "GOAOXF3"; break;
case 0x8B20B030: return "GOAOXF4"; break;
case 0x8B20B031: return "GOAOXF5"; break;
case 0x8B20B03F: return "GOAOXFC"; break;
case 0x8B20B4C5: return "GOAOXOR"; break;
case 0x8B20B546: return "GOAOXPT"; break;
case 0x8B20B625: return "GOAOXR5"; break;
case 0x8B20B6B0: return "GOAOXSA"; break;
case 0x8B20B6B2: return "GOAOXSC"; break;
case 0x8B20B7C0: return "GOAOXUS"; break;
case 0x8B20B91B: return "GOAOXX1"; break;
case 0x8B20B91C: return "GOAOXX2"; break;
case 0x8B20B99A: return "GOAOXY1"; break;
case 0x8B20B99B: return "GOAOXY2"; break;
case 0x569F872B: return "GOBA2"; break;
case 0x569F874B: return "GOBAR"; break;
case 0x10F77086: return "GOBERSERKBLADE"; break;
case 0x569F8AB3: return "GOBHA"; break;
case 0x569F8AB4: return "GOBHB"; break;
case 0x569F8ABA: return "GOBHH"; break;
case 0xF9D4E734: return "GOBLOODSPOT"; break;
case 0x569F8D36: return "GOBMI"; break;
case 0x38B723B8: return "GOBMIDOWN"; break;
case 0xF9278D9D: return "GOBOLT"; break;
case 0x30DF3AAC: return "GOBOLTCHARGEUP"; break;
case 0xCBA8FAB6: return "GOBOLTHIT"; break;
case 0x32BD0625: return "GOBRACERL"; break;
case 0x32BD062B: return "GOBRACERR"; break;
case 0xE1DB9321: return "GOBREASTPLATE"; break;
case 0x8D45886D: return "GOCAMERA"; break;
case 0x569FC837: return "GOCEA"; break;
case 0xE079C97E: return "GOCEAATTACKEXP"; break;
case 0x4E25DC19: return "GOCEALAVASPOT"; break;
case 0x09ADF09E: return "GOCEAVOMITF"; break;
case 0xEBC6E7AE: return "GOCENTAUR"; break;
case 0x569FC846: return "GOCEP"; break;
case 0xF9445AEB: return "GOCEP1"; break;
case 0xEFCB8C5A: return "GOCEPBALLAT2"; break;
case 0xF5FAA0E7: return "GOCEPBALLAT2A"; break;
case 0xEFCB8C5B: return "GOCEPBALLAT3"; break;
case 0xF5FAA166: return "GOCEPBALLAT3A"; break;
case 0xEFCB8C73: return "GOCEPBALLATK"; break;
case 0xF5FAAD3E: return "GOCEPBALLATK1"; break;
case 0xF5FAAD3F: return "GOCEPBALLATK2"; break;
case 0xE1C961C9: return "GOCEPDECAPT"; break;
case 0xE1C961CB: return "GOCEPDECAPV"; break;
case 0x08DAB6D8: return "GOCEPDUST"; break;
case 0x0E1750BD: return "GOCEPFREEZE"; break;
case 0x59DF7970: return "GOCEPSMALLB1"; break;
case 0x4CF6D68B: return "GOCEPSTOMP"; break;
case 0x2E746F26: return "GOCEPSTOMP1"; break;
case 0x2E746F27: return "GOCEPSTOMP2"; break;
case 0x2E746F28: return "GOCEPSTOMP3"; break;
case 0x2E746F29: return "GOCEPSTOMP4"; break;
case 0x1AA525F6: return "GOCEPSTONEDBRK"; break;
case 0xBDD392EA: return "GOCEPTRANEND"; break;
case 0xA84DFBEC: return "GOCEPTRANSPARK"; break;
case 0x283AB85B: return "GOCERGROW"; break;
case 0x569FC8B6: return "GOCFA"; break;
case 0x569FC8C5: return "GOCFP"; break;
case 0x569FCC9F: return "GOCN2"; break;
case 0x569FCCB3: return "GOCNF"; break;
case 0x569FCCBA: return "GOCNM"; break;
case 0x569FD214: return "GOCY2"; break;
case 0x569FD215: return "GOCY3"; break;
case 0x569FD216: return "GOCY4"; break;
case 0x569FD228: return "GOCYF"; break;
case 0x569FD239: return "GOCYW"; break;
case 0x9C40E0AB: return "God Mode Dmg Mult"; break;
case 0x4A812F89: return "God Mode End Name"; break;
case 0x2910D5ED: return "God Mode End Threshold"; break;
case 0x4849D664: return "God Mode Enmy Dmg Mult"; break;
case 0x05EAB2EE: return "God Mode Loop Name"; break;
case 0x47AA29E8: return "God Mode Meter Drain"; break;
case 0xF439E401: return "God Mode Off Threshold"; break;
case 0xE962AE03: return "God Mode On Threshold"; break;
case 0x75271DE6: return "God Mode Tint R"; break;
case 0x75271DDB: return "God Mode Tint G"; break;
case 0x75271DD6: return "God Mode Tint B"; break;
case 0x68065140: return "God Mode Trail Tint R"; break;
case 0x68065135: return "God Mode Trail Tint G"; break;
case 0x68065130: return "God Mode Trail Tint B"; break;
case 0x6806512F: return "God Mode Trail Tint A"; break;
case 0x36724071: return "God Mode Weapon Length"; break;
case 0x0DC3DDB4: return "GODEADDIE"; break;
case 0x0DC4D9C7: return "GODEADHIT"; break;
case 0x71954EB4: return "GODEATHPARTS"; break;
case 0x7B72E216: return "GODEDRED"; break;
case 0x56A04EB0: return "GOEVI"; break;
case 0x11DD7CB8: return "GOEYEBEAM"; break;
case 0xBEB5AD97: return "GOFLASHGROUP"; break;
case 0x529E52CE: return "GOGRIEVEL"; break;
case 0x529E52D4: return "GOGRIEVER"; break;
case 0x56A10131: return "GOHA2"; break;
case 0x56A10145: return "GOHAF"; break;
case 0x56A10151: return "GOHAR"; break;
case 0xF5F4185A: return "GOHARPY"; break;
case 0x27566B3B: return "GOHEALTHORB"; break;
case 0x4161BD15: return "GOHELMET"; break;
case 0xF9E0A382: return "GOHERO"; break;
case 0xF9E0A382: return "GOHERO"; break;
case 0x951DA1FF: return "GOHEROCLTH"; break;
case 0xBE18F043: return "GOLIGHTNINGATTACKMAIN"; break;
case 0x5AEC8BBF: return "GOLIGHTNINGSINGLEBOLT"; break;
case 0x0A27ABFA: return "GOMAGICORB"; break;
case 0xE1DEA96E: return "GOMAIBERZTRAIL"; break;
case 0x012E136B: return "GOMAIBLADE"; break;
case 0x13BE72C4: return "GOMAIBSACTIVE"; break;
case 0xB857EFC4: return "GOMAIFREEZE"; break;
case 0x86B04CC9: return "GOMAIGODBLADE"; break;
case 0x56A23E32: return "GOME2"; break;
case 0x56A23E33: return "GOME3"; break;
case 0x8D093AEC: return "GOMEDHEADFLASH"; break;
case 0x0C2CBB45: return "GOMEDHEADNUKE"; break;
case 0xB69D3C7F: return "GOMEDUSA"; break;
case 0x56A23E57: return "GOMEW"; break;
case 0xFA7CED71: return "GOMEWH"; break;
case 0x56A2402E: return "GOMI2"; break;
case 0x56A2402F: return "GOMI3"; break;
case 0x56A24030: return "GOMI4"; break;
case 0x56A24031: return "GOMI5"; break;
case 0x56A24042: return "GOMIF"; break;
case 0x56A2404A: return "GOMIN"; break;
case 0xE2EA5761: return "GOMINIGAMECIRCLE"; break;
case 0x56A284C9: return "GONTW"; break;
case 0x56A2872E: return "GONYA"; break;
case 0x7EA1EC2E: return "GoodGuy"; break;
case 0x56A37949: return "GORED"; break;
case 0x5920C503: return "GORTDSLASH"; break;
case 0x56A3B63C: return "GOSA2"; break;
case 0x56A3B650: return "GOSAF"; break;
case 0x76F664EC: return "GOSAFSTONEDBRK"; break;
case 0x56A3B65E: return "GOSAT"; break;
case 0x76A61348: return "GOSATBLADESA"; break;
case 0x76A61349: return "GOSATBLADESB"; break;
case 0x511280EC: return "GOSATBLOODCS"; break;
case 0xD6DD07E1: return "GOSATDECAPT"; break;
case 0xD6DD07E3: return "GOSATDECAPV"; break;
case 0x032AF6D5: return "GOSATFREEZE"; break;
case 0x0312B7E2: return "GOSATSPARKPS"; break;
case 0xC978A3DE: return "GOSATSTONEDBRK"; break;
case 0x56A3B7B9: return "GOSD2"; break;
case 0xCEB8DB2F: return "GOSHOULDERGUARDL"; break;
case 0xCEB8DB35: return "GOSHOULDERGUARDR"; break;
case 0x56A3BA46: return "GOSID"; break;
case 0x56A3BA48: return "GOSIF"; break;
case 0x56A3BA54: return "GOSIR"; break;
case 0x56A3BB32: return "GOSK2"; break;
case 0x56A3BB33: return "GOSK3"; break;
case 0x56A3BB34: return "GOSK4"; break;
case 0x56A3BB35: return "GOSK5"; break;
case 0x56A3BB41: return "GOSKA"; break;
case 0x56A3BB42: return "GOSKB"; break;
case 0x56A3BB43: return "GOSKC"; break;
case 0x56A3BB44: return "GOSKD"; break;
case 0x56A3BB46: return "GOSKF"; break;
case 0x5630096E: return "GOSKLBLOOD"; break;
case 0x56A3BB53: return "GOSKS"; break;
case 0xE696CCD9: return "GOSOLDIERSKEL"; break;
case 0x5B254A33: return "GOSPAWNHOLE"; break;
case 0x8993D56F: return "GOSPLASH"; break;
case 0x895F43D0: return "GOSTDBOLT"; break;
case 0x1BAE0304: return "GOSTONEHEROBRK"; break;
case 0x920E8ECB: return "GOSTRIKEGRP"; break;
case 0x57845EF8: return "GOTARGETLK"; break;
case 0xD6E94C3B: return "GOWEAPONORB"; break;
case 0x56A4F2D5: return "GOXDI"; break;
case 0x56A4F3BB: return "GOXF1"; break;
case 0x56A4F3BC: return "GOXF2"; break;
case 0x56A4F3BD: return "GOXF3"; break;
case 0x56A4F3BE: return "GOXF4"; break;
case 0x56A4F3CD: return "GOXFC"; break;
case 0x56A4F44F: return "GOXGF"; break;
case 0x56A4F456: return "GOXGM"; break;
case 0x56A4F746: return "GOXMC"; break;
case 0x56A4F853: return "GOXOR"; break;
case 0x56A4F8D4: return "GOXPT"; break;
case 0x56A4F9AF: return "GOXR1"; break;
case 0x56A4F9C5: return "GOXRG"; break;
case 0x56A4FB4E: return "GOXUS"; break;
case 0x56A4FCA9: return "GOXX1"; break;
case 0x56A4FD28: return "GOXY1"; break;
case 0x59B2D725: return "Grab Effect"; break;
case 0x0B4777DB: return "Grab Sound"; break;
case 0x83B7589E: return "Gravity Flag"; break;
case 0xBB80882E: return "Gravity"; break;
case 0x30CDD4B2: return "Ground Impulse Away"; break;
case 0x3C01BF78: return "Ground Impulse Right"; break;
case 0x668547FF: return "Ground Impulse Up"; break;
case 0x4834F50C: return "Group 0 Idx"; break;
case 0x9477B9CF: return "Group 0"; break;
case 0x57B6730D: return "Group 1 Idx"; break;
case 0x9477B9D0: return "Group 1"; break;
case 0x6737F10E: return "Group 2 Idx"; break;
case 0x9477B9D1: return "Group 2"; break;
case 0x76B96F0F: return "Group 3 Idx"; break;
case 0x9477B9D2: return "Group 3"; break;
case 0x863AED10: return "Group 4 Idx"; break;
case 0x9477B9D3: return "Group 4"; break;
case 0x95BC6B11: return "Group 5 Idx"; break;
case 0x9477B9D4: return "Group 5"; break;
case 0xB4A0531B: return "Handle Angle"; break;
case 0xB2A8856F: return "Handle Behind Range"; break;
case 0x2B2D2457: return "Handle XZ Range"; break;
case 0x25BB317E: return "Handle Y Range"; break;
case 0x7E026978: return "Has Chains"; break;
case 0x500A656C: return "Has Grid"; break;
case 0xCB247958: return "Has Second Radius"; break;
case 0x08E377A0: return "Head"; break;
case 0x08DB8780: return "HEAD"; break;
case 0xAF02422B: return "HeadName"; break;
case 0x97697721: return "Health Max Pct"; break;
case 0xF3A51122: return "Health Meter Idx"; break;
case 0x50249C95: return "Health Orb Mult"; break;
case 0xE019D6FE: return "Health Template"; break;
case 0xDA729778: return "Hit Camera Shake"; break;
case 0xD3890662: return "Hit Context"; break;
case 0x5027094F: return "Hit Counter Reset Time"; break;
case 0x5EA85BFE: return "Hit Effect"; break;
case 0x405CE7FC: return "Hit Particle System"; break;
case 0x883A6970: return "Hit Points"; break;
case 0xEC2E4776: return "HitPoints"; break;
case 0x8777A60E: return "Hold Time"; break;
case 0xFB908478: return "Hold Use World"; break;
case 0x9FDB479C: return "Homing"; break;
case 0x7BDD8C68: return "horizontal max"; break;
case 0xDCD8D794: return "horizontal weight"; break;
case 0xA63CD52C: return "IconGOName"; break;
case 0x0000247B: return "ID"; break;
case 0xDBB472C3: return "Ignore AI Block"; break;
case 0xF17492AE: return "Ignore Hits"; break;
case 0xF676B63B: return "Ignore Invulnerable"; break;
case 0x1E1C0558: return "Ignore Mic Max Distance"; break;
case 0xDF4375E3: return "Impulse Away Scale"; break;
case 0x35F40B1B: return "Impulse Right Scale"; break;
case 0x7A4A8930: return "Impulse Up Scale"; break;
case 0x08CC52B5: return "Impulse"; break;
case 0x7C1B78AF: return "In Combat"; break;
case 0x4C441610: return "In Left Hand GO Name"; break;
case 0x4A975B51: return "In Right Hand GO Name"; break;
case 0x7973E1D2: return "Index"; break;
case 0x1DE04A5E: return "Indicator Time"; break;
case 0x50D9B1C1: return "Infinite Magic"; break;
case 0x36632ECC: return "Inherit Site"; break;
case 0x6CB0E238: return "Inicator GO Name"; break;
case 0x68813237: return "Initial Grab Sound"; break;
case 0x8EB6AF1B: return "Initial Underwater"; break;
case 0xF245A7FF: return "Input 0 Bias"; break;
case 0xDC13638A: return "Input 0 Operator"; break;
case 0x376C2984: return "Input 0 Scale"; break;
case 0xA3832A7E: return "Input 1 Bias"; break;
case 0x068A6809: return "Input 1 Operator"; break;
case 0x24EFE685: return "Input 1 Scale"; break;
case 0x54C0ACFD: return "Input 2 Bias"; break;
case 0x31016C88: return "Input 2 Operator"; break;
case 0x1273A386: return "Input 2 Scale"; break;
case 0x05FE2F7C: return "Input 3 Bias"; break;
case 0x5B787107: return "Input 3 Operator"; break;
case 0xFFF76087: return "Input 3 Scale"; break;
case 0xCDF76AE9: return "Input Sensitivity"; break;
case 0x79CA2EA4: return "inside rim min"; break;
case 0x14DF2E46: return "inside rim weight"; break;
case 0xA3C5272C: return "Inside Square Time"; break;
case 0x55B00CF6: return "Instance Name"; break;
case 0xFF971F92: return "InteractiveObjects"; break;
case 0x7E628510: return "Interactives (U5)"; break;
case 0x26C9AB86: return "Invalid Tint B"; break;
case 0x26C9AB8B: return "Invalid Tint G"; break;
case 0x26C9AB96: return "Invalid Tint R"; break;
case 0x595AD8AD: return "Invulnerable"; break;
case 0xFEA292E6: return "IO Anim1"; break;
case 0xFEA292E7: return "IO Anim2"; break;
case 0xC5B0169F: return "IO Flourish Anim"; break;
case 0x3E92B123: return "IO Idle Anim"; break;
case 0xD7F2BEA8: return "IO TandF Anim"; break;
case 0x3D6B1FC7: return "IOP Streams (U2)"; break;
case 0x2FF8EEE7: return "IOP UW no mod (U11)"; break;
case 0x09066C33: return "Item"; break;
case 0x51F0E2E1: return "Joint Name"; break;
case 0x73215755: return "JointName"; break;
case 0x28071C0C: return "Jump Compensation"; break;
case 0x35159154: return "Jump Land Effect"; break;
case 0x0925F0AE: return "Jump"; break;
case 0x511AA2B4: return "Jumping"; break;
case 0x974039AF: return "LadderSlide"; break;
case 0x0012E4D2: return "Lag"; break;
case 0x8CA8E85C: return "Lean Turns"; break;
case 0xB80C5A1F: return "Leap Back"; break;
case 0xA6DE59B7: return "Leave"; break;
case 0x5153E5CA: return "Left Back Joint"; break;
case 0x8FF2D78A: return "Left Blade Chain Joint"; break;
case 0x08937AD3: return "Left Hand Chain Joint"; break;
case 0x7A364BBB: return "Left In Hand Joint"; break;
case 0x23A6EB84: return "Left Out Hand Joint"; break;
case 0x989C9115: return "Left Weapon"; break;
case 0xA6E37C64: return "Level"; break;
case 0x117C872E: return "Life Span"; break;
case 0xC05B96D3: return "Link Diameter"; break;
case 0xEF5E5B9A: return "Link Duration"; break;
case 0x4AF1C1C4: return "LM amplitude"; break;
case 0xCEDD3738: return "LM bias"; break;
case 0x27A044DD: return "LM frequency"; break;
case 0x78B407BC: return "LM phase"; break;
case 0xFCC4EC1C: return "LM Waveform"; break;
case 0x72F8629C: return "Loop Sound Modifier "; break;
case 0x65118923: return "Looped"; break;
case 0xD1E4FB5C: return "Low Health Death Freq"; break;
case 0xF8963BC1: return "Low Health Death Timer"; break;
case 0x4862702C: return "Low Health Max Freq"; break;
case 0x682CEF0E: return "Low Health Max Volume"; break;
case 0x2EEAA7AC: return "Low Health Max"; break;
case 0xC8193F3E: return "Low Health Min Freq"; break;
case 0xE4D92C20: return "Low Health Min Volume"; break;
case 0x2EEAAB9A: return "Low Health Min"; break;
case 0x46CB1DCD: return "Low Health Prob"; break;
case 0x138CABB3: return "Low Health Threshold"; break;
case 0x6431D6C5: return "Low Magic Max"; break;
case 0x6431DAB3: return "Low Magic Min"; break;
case 0xB51B7B34: return "Low Magic Prob"; break;
case 0xBDBA25F9: return "LTIBIA"; break;
case 0x76DF37CD: return "Magic Template"; break;
case 0xE91F1418: return "Magic Threshold"; break;
case 0xB5E4454D: return "Magic"; break;
case 0xB1F4254D: return "MAGIC"; break;
case 0xE6E9FD64: return "Magic Orb Mult"; break;
case 0x69AC5094: return "Manual Targeting Range"; break;
case 0x0D66FBF4: return "mass"; break;
case 0x097ECC14: return "Mass"; break;
case 0x353DEAD6: return "Master Replace"; break;
case 0x9B32F400: return "Max Hit Points Level 0"; break;
case 0x9B32F401: return "Max Hit Points Level 1"; break;
case 0x9B32F402: return "Max Hit Points Level 2"; break;
case 0x9B32F403: return "Max Hit Points Level 3"; break;
case 0x9B32F404: return "Max Hit Points Level 4"; break;
case 0x96EE6165: return "Max Magic Level 0"; break;
case 0x96EE6166: return "Max Magic Level 1"; break;
case 0x96EE6167: return "Max Magic Level 2"; break;
case 0x96EE6168: return "Max Magic Level 3"; break;
case 0x96EE6169: return "Max Magic Level 4"; break;
case 0x96EE616A: return "Max Magic Level 5"; break;
case 0xAF407A55: return "max rail speed"; break;
case 0x8B8EF005: return "Max To Dolly"; break;
case 0x77669ADA: return "Max To Target"; break;
case 0xB503FBE4: return "Max Unwind Speed"; break;
case 0x432A44FA: return "Max Volume Change"; break;
case 0xFE467FE6: return "Max Windup Speed"; break;
case 0x776F2158: return "Max Wrong Zones"; break;
case 0x5938A592: return "MaxHitPoints"; break;
case 0x76EDAF72: return "maximum dist weight"; break;
case 0xEEBAFFA6: return "maximum dist"; break;
case 0x9014F19D: return "Menu Sounds (U4)"; break;
case 0x2AF48B79: return "Message Index"; break;
case 0x4767730A: return "Meter Bar Hold Time"; break;
case 0x4192D8CE: return "Meter Fall Rate"; break;
case 0x22BB37BB: return "MFX Template"; break;
case 0x1C66A7CF: return "Mic Boom Ratio"; break;
case 0xD36643CA: return "Mic Max Distance"; break;
case 0x619BB398: return "Mic Underwater"; break;
case 0xBAAEC1C7: return "Mid Far Dist"; break;
case 0xB7EB5695: return "Middle"; break;
case 0xA23A1E9C: return "Middle:A"; break;
case 0xA23A1E9D: return "Middle:B"; break;
case 0xA23A1EA2: return "Middle:G"; break;
case 0xA23A1EAD: return "Middle:R"; break;
case 0x5CAAE128: return "Midpoint"; break;
case 0x8B6268E0: return "Milestone 0 Hits"; break;
case 0x3C9FEB5F: return "Milestone 1 Hits"; break;
case 0xB6E81671: return "Milestone 10 Hits"; break;
case 0x682598F0: return "Milestone 11 Hits"; break;
case 0x19631B6F: return "Milestone 12 Hits"; break;
case 0xCAA09DEE: return "Milestone 13 Hits"; break;
case 0x7BDE206D: return "Milestone 14 Hits"; break;
case 0x2D1BA2EC: return "Milestone 15 Hits"; break;
case 0xDE59256B: return "Milestone 16 Hits"; break;
case 0x8F96A7EA: return "Milestone 17 Hits"; break;
case 0x40D42A69: return "Milestone 18 Hits"; break;
case 0xF211ACE8: return "Milestone 19 Hits"; break;
case 0xEDDD6DDE: return "Milestone 2 Hits"; break;
case 0x9F1AF05D: return "Milestone 3 Hits"; break;
case 0x505872DC: return "Milestone 4 Hits"; break;
case 0x0195F55B: return "Milestone 5 Hits"; break;
case 0xB2D377DA: return "Milestone 6 Hits"; break;
case 0x6410FA59: return "Milestone 7 Hits"; break;
case 0x154E7CD8: return "Milestone 8 Hits"; break;
case 0xC68BFF57: return "Milestone 9 Hits"; break;
case 0x76CAA0A4: return "Mime Dialogue"; break;
case 0x6B429B17: return "Min To Dolly"; break;
case 0x718878C8: return "Min To Target"; break;
case 0x58B24360: return "minimum dist weight"; break;
case 0xCE6EAAB8: return "minimum dist"; break;
case 0x3F51D87B: return "ModelViewer"; break;
case 0x54BF0DA3: return "MotionResponceAir"; break;
case 0xE6B8E1CE: return "MotionResponceGround"; break;
case 0x6394A6F2: return "Mouth Force"; break;
case 0x099578DC: return "Move 0 Limit"; break;
case 0x27EECC00: return "Move 0 Min Block"; break;
case 0x0A969453: return "Move 0 Min"; break;
case 0x1726FEA1: return "Move 0"; break;
case 0xF71935DD: return "Move 1 Limit"; break;
case 0x38FA0701: return "Move 1 Min Block"; break;
case 0x1A181254: return "Move 1 Min"; break;
case 0x1726FEA2: return "Move 1"; break;
case 0x3503C5C9: return "Move 10 Limit"; break;
case 0x43A6BEED: return "Move 10 Min Block"; break;
case 0xE4838E40: return "Move 10 Min"; break;
case 0x7C58528E: return "Move 10"; break;
case 0xE49CF2DE: return "Move 2 Limit"; break;
case 0x4A054202: return "Move 2 Min Block"; break;
case 0x29999055: return "Move 2 Min"; break;
case 0x1726FEA3: return "Move 2"; break;
case 0xD220AFDF: return "Move 3 Limit"; break;
case 0x5B107D03: return "Move 3 Min Block"; break;
case 0x391B0E56: return "Move 3 Min"; break;
case 0x1726FEA4: return "Move 3"; break;
case 0xBFA46CE0: return "Move 4 Limit"; break;
case 0x6C1BB804: return "Move 4 Min Block"; break;
case 0x489C8C57: return "Move 4 Min"; break;
case 0x1726FEA5: return "Move 4"; break;
case 0xAD2829E1: return "Move 5 Limit"; break;
case 0x7D26F305: return "Move 5 Min Block"; break;
case 0x581E0A58: return "Move 5 Min"; break;
case 0x1726FEA6: return "Move 5"; break;
case 0x9AABE6E2: return "Move 6 Limit"; break;
case 0x8E322E06: return "Move 6 Min Block"; break;
case 0x679F8859: return "Move 6 Min"; break;
case 0x1726FEA7: return "Move 6"; break;
case 0x882FA3E3: return "Move 7 Limit"; break;
case 0x9F3D6907: return "Move 7 Min Block"; break;
case 0x7721065A: return "Move 7 Min"; break;
case 0x1726FEA8: return "Move 7"; break;
case 0x75B360E4: return "Move 8 Limit"; break;
case 0xB048A408: return "Move 8 Min Block"; break;
case 0x86A2845B: return "Move 8 Min"; break;
case 0x1726FEA9: return "Move 8"; break;
case 0x63371DE5: return "Move 9 Limit"; break;
case 0xC153DF09: return "Move 9 Min Block"; break;
case 0x9624025C: return "Move 9 Min"; break;
case 0x1726FEAA: return "Move 9"; break;
case 0x4A61453F: return "Move Dolly"; break;
case 0x99755447: return "Movement X"; break;
case 0x99755448: return "Movement Y"; break;
case 0x99755449: return "Movement Z"; break;
case 0x452F08BB: return "MPEG (U6)"; break;
case 0xECC85C37: return "Msg Style 1 Blue"; break;
case 0xC5A4CEA6: return "Msg Style 1 Green"; break;
case 0xFDD927B4: return "Msg Style 1 Red"; break;
case 0x7EFA3631: return "Msg Style 1 Slant"; break;
case 0x9E05DEB6: return "Msg Style 2 Blue"; break;
case 0xB3288BA7: return "Msg Style 2 Green"; break;
case 0x0D5AA5B5: return "Msg Style 2 Red"; break;
case 0x6C7DF332: return "Msg Style 2 Slant"; break;
case 0xDDF24FA7: return "Msg Type Rate"; break;
case 0x16B6AA72: return "Multiple Targets"; break;
case 0xCF84D739: return "Music UW no mod (U7)"; break;
case 0xB8585745: return "Music"; break;
case 0x4BADFC91: return "Muzzle Radius"; break;
case 0x099E0A8B: return "Name"; break;
case 0x099F0388: return "NegX"; break;
case 0x099F0389: return "NegY"; break;
case 0x099F038A: return "NegZ"; break;
case 0x4E16EE9C: return "No Aiming"; break;
case 0xE356E5C7: return "No Armor Health Threshold"; break;
case 0x5424E073: return "No Armor Stunned"; break;
case 0x8A837DA4: return "No Orient"; break;
case 0x7331234F: return "No Regen Time"; break;
case 0x918DE416: return "No Turn Damp Cancel"; break;
case 0x36EB2BF9: return "Nominal Distance"; break;
case 0x555B1EA9: return "Nominal Particles"; break;
case 0x7F43C4C5: return "Nominal Size"; break;
case 0xA5563949: return "NoYMove"; break;
case 0x189B5BC2: return "obscured symetrical"; break;
case 0x9E468EB9: return "obscured weight"; break;
case 0x0013A44F: return "Off"; break;
case 0xCC9EAF6B: return "Offset X"; break;
case 0xCC9EAF6C: return "Offset Y"; break;
case 0xCC9EAF6D: return "Offset Z"; break;
case 0xEC241233: return "Offset"; break;
case 0xFF0DAF8F: return "Omnipotent"; break;
case 0x86031B28: return "On Ground"; break;
case 0x6E63AA13: return "On Rope"; break;
case 0x815FF05D: return "On Sound Name"; break;
case 0x0000279F: return "On"; break;
case 0xC3441D8C: return "Opaque Time"; break;
case 0x4D7975BF: return "Orb Emitter Template 2"; break;
case 0x4D7975C0: return "Orb Emitter Template 3"; break;
case 0xB9A0D2AD: return "Orb Emitter Template"; break;
case 0xB60D39A0: return "Oscillate Ampl"; break;
case 0xB6AAB6B0: return "Oscillate Freq"; break;
case 0xF0864672: return "Oscillate Y Offset"; break;
case 0x9A6419F6: return "Over Sample"; break;
case 0xE475B2B4: return "Overhead"; break;
case 0x182552C3: return "Override Mic Boom Ratio"; break;
case 0xB74A42E6: return "Override Reverb"; break;
case 0x09DC9013: return "Part"; break;
case 0x8EAB20CB: return "Particle Effect"; break;
case 0xDEF074DC: return "Particle System 1 Dark"; break;
case 0x164D3F10: return "Particle System 1 Light"; break;
case 0x902DF75B: return "Particle System 2 Dark"; break;
case 0x03D0FC11: return "Particle System 2 Light"; break;
case 0x416B79DA: return "Particle System 3 Dark"; break;
case 0xF154B912: return "Particle System 3 Light"; break;
case 0x683EA349: return "Particle System"; break;
case 0x41E08A53: return "Pass Frc Act Time"; break;
case 0xEB453B32: return "pause AI"; break;
case 0x9CDC15E3: return "PauseTime"; break;
case 0xB0A2D9A0: return "PB TopSpeed"; break;
case 0x9C811767: return "Physics"; break;
case 0x56E66A5F: return "Pickup Delay"; break;
case 0x40B798CB: return "Pickup Sound"; break;
case 0xCB865A1C: return "Pickup"; break;
case 0xB50A547C: return "Pl Anim1"; break;
case 0xB50A547D: return "Pl Anim2"; break;
case 0x4E2B8035: return "Pl Flourish Anim"; break;
case 0xFF5F5921: return "Pl Grab Anim"; break;
case 0xDC77F412: return "Pl TandF Anim"; break;
case 0x5F25E17F: return "Platform Armor Stagger"; break;
case 0x96203D05: return "Platform Armor Stunned"; break;
case 0xF5E1B732: return "Platform Back Dist"; break;
case 0x7E52AE35: return "Platform Center Angle"; break;
case 0x45334518: return "Platform Dismount"; break;
case 0x0E9FF493: return "Platform Dist"; break;
case 0xCDA3C76C: return "Platform Mount"; break;
case 0x5FB05060: return "Platform No Armor Stunned"; break;
case 0xF29D779D: return "Platform Stagger First Time"; break;
case 0xEC05B2E0: return "Platform Stagger"; break;
case 0x23000E66: return "Platform Stunned"; break;
case 0x37879C65: return "Platform Victory"; break;
case 0x4546A3BB: return "Player Freeze Move"; break;
case 0x7368AF44: return "Player Soldier Tweaks"; break;
case 0x294B93A3: return "Points"; break;
case 0x09DFFF18: return "Pole"; break;
case 0x0EE2A477: return "Pos Amplitude"; break;
case 0x617E1509: return "Position"; break;
case 0x09E00284: return "PosX"; break;
case 0x09E00285: return "PosY"; break;
case 0x09E00286: return "PosZ"; break;
case 0x9372E259: return "PreRiseTime"; break;
case 0xF48A3E39: return "Press Sound Name"; break;
case 0x9A6CA6A4: return "Priority"; break;
case 0xA7082DB6: return "Projectile Block"; break;
case 0xC3A12B87: return "Prox Radius"; break;
case 0xB4AF76AB: return "Push Back Amount"; break;
case 0x81E9A672: return "Push Clunk Sound"; break;
case 0x4074EC40: return "Push Land Sound"; break;
case 0x1403C149: return "Push Sound"; break;
case 0xDEB0C1BF: return "PushPull"; break;
case 0x70F23994: return "Raiden Cycle Time"; break;
case 0xB8B7BE7A: return "Rail Relative"; break;
case 0x171AC968: return "Ratch Backward Sound"; break;
case 0xEAE2449B: return "Ratch Click BCount"; break;
case 0xAFD84E97: return "Ratch Click FCount"; break;
case 0x7459231E: return "Ratch Forward Sound"; break;
case 0x351DEC74: return "Regen Effect"; break;
case 0x1B1DFB0C: return "Regen Sound"; break;
case 0x1B394804: return "Regen Speed"; break;
case 0x98851EC7: return "Release"; break;
case 0xF134F284: return "Remove"; break;
case 0x30601824: return "RenderCollSpheres"; break;
case 0x9E0CB7BC: return "RenderGrid"; break;
case 0xD888391E: return "Reset Sound"; break;
case 0x03EBB36F: return "Reset"; break;
case 0x2BB626FE: return "Reticle Scale"; break;
case 0xA58B9446: return "Reticle Y Offset"; break;
case 0x0282E2DF: return "Retreat Dist"; break;
case 0x16285567: return "Retreat"; break;
case 0x9C3AC295: return "Right Back Joint"; break;
case 0x4E07013F: return "Right Blade Chain Joint"; break;
case 0xAF5D369E: return "Right Hand Chain Joint"; break;
case 0xFD625F70: return "Right In Hand Joint"; break;
case 0x3684B24F: return "Right Out Hand Joint"; break;
case 0xE4B883E0: return "Right Weapon"; break;
case 0xB38919FB: return "Rope Dir Type"; break;
case 0x0A1E8412: return "Rope"; break;
case 0x82C42E3F: return "RopeSlide"; break;
case 0x05245F0F: return "Rot X"; break;
case 0x05245F10: return "Rot Y"; break;
case 0x05245F11: return "Rot Z"; break;
case 0x61D3DDDF: return "Rotation Constraint"; break;
case 0x00860345: return "Rotation Mode"; break;
case 0x3F652E7E: return "Rotation"; break;
case 0x4726F43E: return "Run Dust Attach"; break;
case 0xAE05DEA4: return "Run Dust Name"; break;
case 0xD82A4C3E: return "Run Dust Orient"; break;
case 0x2A9BC00E: return "rWeapIH"; break;
case 0x86044FCE: return "RWEAPIH"; break;
case 0xF35EA42C: return "Safe Zone Bottom"; break;
case 0xDB83ACA8: return "Safe Zone Left"; break;
case 0x2C2B1E13: return "Safe Zone Radius"; break;
case 0x43D8DADB: return "Safe Zone Right"; break;
case 0xB11B36D4: return "Safe Zone Top"; break;
case 0xA4E61BC3: return "Scale Num Part"; break;
case 0x79D90A02: return "Scale X"; break;
case 0x79D90A03: return "Scale Y"; break;
case 0x79D90A04: return "Scale Z"; break;
case 0x884F26FF: return "ScaleCenter"; break;
case 0xCCF3A893: return "ScaleRange"; break;
case 0x684A8D09: return "Search Move"; break;
case 0x758CABEE: return "Second Fight Radius"; break;
case 0x3C004353: return "Segment Length"; break;
case 0xA2AEF061: return "Segment Mass"; break;
case 0x3F46CD28: return "seperating max"; break;
case 0x3F46D116: return "seperating min"; break;
case 0x5EC0B6D4: return "seperating weight"; break;
case 0xABED0F17: return "SFX UW no mod (U9)"; break;
case 0x0B67E5A1: return "SFX UW pitch (U8)"; break;
case 0x00149065: return "SFX"; break;
case 0xECEE4D4D: return "Shadow Diameter"; break;
case 0x93191D85: return "Shard Physics"; break;
case 0x6A3C8B7F: return "Shards Per Meter Level"; break;
case 0xFC037268: return "Show Health Meter"; break;
case 0xCA686863: return "Show R2"; break;
case 0x8AA4E8DE: return "ShowCollisions"; break;
case 0xE54A19A6: return "Slice Hit Name"; break;
case 0x0F01C134: return "Slice Hit Sound"; break;
case 0xD97BE500: return "Slide Sound"; break;
case 0xF1FBDB2D: return "slope weight"; break;
case 0x3149FDE6: return "Slow Mo Max Slew"; break;
case 0x70E460CB: return "Slow Mo Scale"; break;
case 0x7AF1A83D: return "SM amplitude"; break;
case 0x4D77623F: return "SM bias"; break;
case 0x57A02B56: return "SM frequency"; break;
case 0x472F6035: return "SM phase"; break;
case 0x74138923: return "SM Waveform"; break;
case 0xAC15F86B: return "Small Radius"; break;
case 0x941A528D: return "soft_clamp_width"; break;
case 0xB6EF22E5: return "Soldier Tweaks"; break;
case 0x68503EDC: return "SoldierTemplate"; break;
case 0xB93F0272: return "Spawn Time"; break;
case 0x14C18FC7: return "Speed"; break;
case 0x23C96C13: return "Sphere 00"; break;
case 0x23C96C14: return "Sphere 01"; break;
case 0x23C96C15: return "Sphere 02"; break;
case 0x23C96C16: return "Sphere 03"; break;
case 0x23C96C17: return "Sphere 04"; break;
case 0x23C96C18: return "Sphere 05"; break;
case 0x23C96C19: return "Sphere 06"; break;
case 0x23C96C1A: return "Sphere 07"; break;
case 0x23C96C1B: return "Sphere 08"; break;
case 0x23C96C1C: return "Sphere 09"; break;
case 0x23C96C92: return "Sphere 10"; break;
case 0x23C96C93: return "Sphere 11"; break;
case 0x23C96C94: return "Sphere 12"; break;
case 0x23C96C95: return "Sphere 13"; break;
case 0x23C96C96: return "Sphere 14"; break;
case 0x23C96C97: return "Sphere 15"; break;
case 0x23C96C98: return "Sphere 16"; break;
case 0x23C96C99: return "Sphere 17"; break;
case 0x23C96C9A: return "Sphere 18"; break;
case 0x23C96C9B: return "Sphere 19"; break;
case 0x23C96D11: return "Sphere 20"; break;
case 0x23C96D12: return "Sphere 21"; break;
case 0x23C96D13: return "Sphere 22"; break;
case 0x23C96D14: return "Sphere 23"; break;
case 0xAC0AAF26: return "Spread Angle"; break;
case 0x51FEE0B7: return "Spring Constant"; break;
case 0xAD717AFB: return "Spring Constant2"; break;
case 0xEA64E72F: return "Spring Damping"; break;
case 0x480EB083: return "Spring Damping2"; break;
case 0x644942DA: return "Stage 0 Allow Charging"; break;
case 0x975271A5: return "Stage 0 Arrow Emitter"; break;
case 0xB2BD4291: return "Stage 0 Ch1 Arrow Emitter"; break;
case 0x0DD02A7F: return "Stage 0 Ch1 Magic Drain"; break;
case 0xA18D9F85: return "Stage 0 Ch1 Threshold"; break;
case 0x1553FB92: return "Stage 0 Ch2 Arrow Emitter"; break;
case 0xE260A480: return "Stage 0 Ch2 Magic Drain"; break;
case 0xB298DA86: return "Stage 0 Ch2 Threshold"; break;
case 0x5E80EBA7: return "Stage 0 Charge Time"; break;
case 0x6CDCCA00: return "Stage 0 Damage Multiplier"; break;
case 0xEA0093D1: return "Stage 0 Damage Per Hit"; break;
case 0x399EF207: return "Stage 0 Distance"; break;
case 0x70D0162E: return "Stage 0 Fog Template"; break;
case 0xA2EC1FD1: return "Stage 0 GO Name"; break;
case 0xEC47466A: return "Stage 0 Homing Amount"; break;
case 0x34E36D93: return "Stage 0 Magic Drain"; break;
case 0x675E589D: return "Stage 0 Max Damage"; break;
case 0xA5F682C5: return "Stage 0 Max Reach"; break;
case 0xA2D0941B: return "Stage 0 Max Time"; break;
case 0x6AF9402B: return "Stage 0 Max Velocity"; break;
case 0x1E5353F8: return "Stage 0 Num Dead Guys"; break;
case 0x663EA334: return "Stage 0 Playback Speed"; break;
case 0x4D0F0A59: return "Stage 1 Allow Charging"; break;
case 0xF9E92AA6: return "Stage 1 Arrow Emitter"; break;
case 0x8CE37992: return "Stage 1 Ch1 Arrow Emitter"; break;
case 0x87EE2280: return "Stage 1 Ch1 Magic Drain"; break;
case 0x04245886: return "Stage 1 Ch1 Threshold"; break;
case 0xEF7A3293: return "Stage 1 Ch2 Arrow Emitter"; break;
case 0x5C7E9C81: return "Stage 1 Ch2 Magic Drain"; break;
case 0x152F9387: return "Stage 1 Ch2 Threshold"; break;
case 0x331165A8: return "Stage 1 Charge Time"; break;
case 0x47030101: return "Stage 1 Damage Multiplier"; break;
case 0xD2C65B50: return "Stage 1 Damage Per Hit"; break;
case 0xE47C9CAD: return "Stage 1 Fog Template"; break;
case 0xFBF31BD2: return "Stage 1 GO Name"; break;
case 0x4EDDFF6B: return "Stage 1 Homing Amount"; break;
case 0xDBF09E1C: return "Stage 1 Max Damage"; break;
case 0xB701BDC6: return "Stage 1 Max Reach"; break;
case 0xCD47989A: return "Stage 1 Max Time"; break;
case 0xDEA5C6AA: return "Stage 1 Max Velocity"; break;
case 0x80EA0CF9: return "Stage 1 Num Dead Guys"; break;
case 0x0973E794: return "Stage 1 Magic Drain"; break;
case 0x4F046AB3: return "Stage 1 Playback Speed"; break;
case 0x35D4D1D8: return "Stage 2 Allow Charging"; break;
case 0x5C7FE3A7: return "Stage 2 Arrow Emitter"; break;
case 0x6709B093: return "Stage 2 Ch1 Arrow Emitter"; break;
case 0x020C1A81: return "Stage 2 Ch1 Magic Drain"; break;
case 0x66BB1187: return "Stage 2 Ch1 Threshold"; break;
case 0xC9A06994: return "Stage 2 Ch2 Arrow Emitter"; break;
case 0xD69C9482: return "Stage 2 Ch2 Magic Drain"; break;
case 0x77C64C88: return "Stage 2 Ch2 Threshold"; break;
case 0x07A1DFA9: return "Stage 2 Charge Time"; break;
case 0x21293802: return "Stage 2 Damage Multiplier"; break;
case 0xBB8C22CF: return "Stage 2 Damage Per Hit"; break;
case 0x54FA17D3: return "Stage 2 GO Name"; break;
case 0xB174B86C: return "Stage 2 Homing Amount"; break;
case 0xDE046195: return "Stage 2 Magic Drain"; break;
case 0x5082E39B: return "Stage 2 Max Damage"; break;
case 0xC80CF8C7: return "Stage 2 Max Reach"; break;
case 0xF7BE9D19: return "Stage 2 Max Time"; break;
case 0x52524D29: return "Stage 2 Max Velocity"; break;
case 0xE380C5FA: return "Stage 2 Num Dead Guys"; break;
case 0x37CA3232: return "Stage 2 Playback Speed"; break;
case 0x9686B4B0: return "Stagger First Time"; break;
case 0x3E530D4D: return "Stagger"; break;
case 0x153DA042: return "Start"; break;
case 0xA48745CB: return "static_friction"; break;
case 0xAF3499D8: return "Statue Vertical Break Speed"; break;
case 0x89D0419C: return "Strand 00 Motion"; break;
case 0x5E2B051B: return "Strand 01 Motion"; break;
case 0x3285C89A: return "Strand 02 Motion"; break;
case 0x06E08C19: return "Strand 03 Motion"; break;
case 0xDB3B4F98: return "Strand 04 Motion"; break;
case 0xAF961317: return "Strand 05 Motion"; break;
case 0x83F0D696: return "Strand 06 Motion"; break;
case 0x584B9A15: return "Strand 07 Motion"; break;
case 0x2CA65D94: return "Strand 08 Motion"; break;
case 0x01012113: return "Strand 09 Motion"; break;
case 0xE2D73D9D: return "Strand 10 Motion"; break;
case 0xB732011C: return "Strand 11 Motion"; break;
case 0x8B8CC49B: return "Strand 12 Motion"; break;
case 0x5FE7881A: return "Strand 13 Motion"; break;
case 0x34424B99: return "Strand 14 Motion"; break;
case 0x089D0F18: return "Strand 15 Motion"; break;
case 0xDCF7D297: return "Strand 16 Motion"; break;
case 0xB1529616: return "Strand 17 Motion"; break;
case 0x85AD5995: return "Strand 18 Motion"; break;
case 0x5A081D14: return "Strand 19 Motion"; break;
case 0x3BDE399E: return "Strand 20 Motion"; break;
case 0x1038FD1D: return "Strand 21 Motion"; break;
case 0xE493C09C: return "Strand 22 Motion"; break;
case 0xB8EE841B: return "Strand 23 Motion"; break;
case 0x8D49479A: return "Strand 24 Motion"; break;
case 0x61A40B19: return "Strand 25 Motion"; break;
case 0x35FECE98: return "Strand 26 Motion"; break;
case 0x0A599217: return "Strand 27 Motion"; break;
case 0xDEB45596: return "Strand 28 Motion"; break;
case 0xB30F1915: return "Strand 29 Motion"; break;
case 0x94E5359F: return "Strand 30 Motion"; break;
case 0x693FF91E: return "Strand 31 Motion"; break;
case 0x3D9ABC9D: return "Strand 32 Motion"; break;
case 0x11F5801C: return "Strand 33 Motion"; break;
case 0xE650439B: return "Strand 34 Motion"; break;
case 0xBAAB071A: return "Strand 35 Motion"; break;
case 0x8F05CA99: return "Strand 36 Motion"; break;
case 0x63608E18: return "Strand 37 Motion"; break;
case 0x37BB5197: return "Strand 38 Motion"; break;
case 0x0C161516: return "Strand 39 Motion"; break;
case 0xEDEC31A0: return "Strand 40 Motion"; break;
case 0xC246F51F: return "Strand 41 Motion"; break;
case 0x96A1B89E: return "Strand 42 Motion"; break;
case 0x6AFC7C1D: return "Strand 43 Motion"; break;
case 0x3F573F9C: return "Strand 44 Motion"; break;
case 0x13B2031B: return "Strand 45 Motion"; break;
case 0xE80CC69A: return "Strand 46 Motion"; break;
case 0xBC678A19: return "Strand 47 Motion"; break;
case 0x8BA3A091: return "String"; break;
case 0x126EECD1: return "Stuck Time"; break;
case 0x754D68D3: return "Stunned"; break;
case 0x08404743: return "Sustain"; break;
case 0x0A3FBA28: return "Swim"; break;
case 0x9B705B9D: return "Swimming"; break;
case 0xD32C336D: return "Swing Sound"; break;
case 0xC1C01F59: return "SwitchView"; break;
case 0xF3988DFD: return "SYNCHJOINT"; break;
case 0x218D3481: return "TandF Loop"; break;
case 0x8856843B: return "Target Joint"; break;
case 0x532547A1: return "Target Radius"; break;
case 0x07FA8F27: return "Target Weight"; break;
case 0x325C718E: return "Targeting Range"; break;
case 0x175D388A: return "Template 0"; break;
case 0x175D388B: return "Template 1"; break;
case 0x973F0D25: return "Template 10"; break;
case 0x973F0D26: return "Template 11"; break;
case 0x973F0D27: return "Template 12"; break;
case 0x973F0D28: return "Template 13"; break;
case 0x973F0D29: return "Template 14"; break;
case 0x973F0D2A: return "Template 15"; break;
case 0x973F0D2B: return "Template 16"; break;
case 0x973F0D2C: return "Template 17"; break;
case 0x973F0D2D: return "Template 18"; break;
case 0x973F0D2E: return "Template 19"; break;
case 0x175D388C: return "Template 2"; break;
case 0x175D388D: return "Template 3"; break;
case 0x175D388E: return "Template 4"; break;
case 0x175D388F: return "Template 5"; break;
case 0x175D3890: return "Template 6"; break;
case 0x175D3891: return "Template 7"; break;
case 0x175D3892: return "Template 8"; break;
case 0x175D3893: return "Template 9"; break;
case 0x175D4CF5: return "TemplateID"; break;
case 0x6096FEBB: return "TF Time"; break;
case 0xB390B1C5: return "Thing On A Spring Factor 1"; break;
case 0xB390B1C6: return "Thing On A Spring Factor 2"; break;
case 0x31127FEB: return "Threshold"; break;
case 0x9789B6A5: return "Timed Retaliate Move"; break;
case 0x0014E3D5: return "Top"; break;
case 0x24266BDC: return "Top:A"; break;
case 0x24266BDD: return "Top:B"; break;
case 0x24266BE2: return "Top:G"; break;
case 0x24266BED: return "Top:R"; break;
case 0x0B1EC59B: return "Toppoint"; break;
case 0x819E4A49: return "Total Time"; break;
case 0xD4521FD9: return "Toward Mult"; break;
case 0xE476D966: return "Track Target"; break;
case 0xD5E50958: return "TrackTime"; break;
case 0x35199881: return "Trail Left"; break;
case 0x355722E5: return "Trail Name"; break;
case 0xB538DB82: return "Trail Right"; break;
case 0x45D27455: return "Trail Rotate"; break;
case 0x4A8D7F96: return "Trail Tint A"; break;
case 0x4A8D7F97: return "Trail Tint B"; break;
case 0x4A8D7F9C: return "Trail Tint G"; break;
case 0x4A8D7FA7: return "Trail Tint R"; break;
case 0xA9248CD4: return "Trail Translate"; break;
case 0xF0591165: return "Transform Move"; break;
case 0xD0660FB7: return "Turn Toward Target"; break;
case 0xA15A704C: return "TurnFactor"; break;
case 0x73F1D38C: return "Tween Default"; break;
case 0x0A5F7D1A: return "Type"; break;
case 0xA0CDB24E: return "Unblockable"; break;
case 0xED26746A: return "UnderRadius"; break;
case 0x33317A59: return "Underwater Alternate"; break;
case 0x39607741: return "Underwater Music Vol Scale"; break;
case 0xBCEA2BD4: return "Underwater Pitch Offset"; break;
case 0x6E58F4C3: return "Underwater Tween Time"; break;
case 0x465F0725: return "Underwater Volume Scale"; break;
case 0xCD07D9B7: return "Unfreeze Speed"; break;
case 0x31C5609E: return "Up Angle Degree"; break;
case 0x51D511AA: return "Use Static Target"; break;
case 0xA6E81C1E: return "Use Sync Joint"; break;
case 0x886CA383: return "UW Trail Name"; break;
case 0x423A3501: return "Valid Tint B"; break;
case 0x423A3506: return "Valid Tint G"; break;
case 0x423A3511: return "Valid Tint R"; break;
case 0x96C0539D: return "Velocity"; break;
case 0x5F2395DA: return "vertical max"; break;
case 0x89CB7922: return "vertical weight"; break;
case 0x89D4F6D2: return "Victory"; break;
case 0xD37B884C: return "VisualDegree"; break;
case 0x4672BFB2: return "VisualRadius"; break;
case 0x4328C25F: return "Vomit"; break;
case 0x806B8D8E: return "Walk Forward"; break;
case 0xD5676F41: return "Walkable Slope Angle"; break;
case 0x7AA8082A: return "WallPullup"; break;
case 0xCD7DA53A: return "WanderSpeed"; break;
case 0x9782458A: return "Weapon Length"; break;
case 0xA56BD0F0: return "Weapon Level 0"; break;
case 0xA56BD0F1: return "Weapon Level 1"; break;
case 0xA56BD0F2: return "Weapon Level 2"; break;
case 0xA56BD0F3: return "Weapon Level 3"; break;
case 0xA56BD0F4: return "Weapon Level 4"; break;
case 0xA56BD0F5: return "Weapon Level 5"; break;
case 0x92D47D95: return "Weapon Orb Mult"; break;
case 0x22C9B7FE: return "Weapon Template"; break;
case 0x674E014A: return "weight_1"; break;
case 0x674E014B: return "weight_2"; break;
case 0x26B7499F: return "Wide Radius"; break;
case 0x51EC85C6: return "Width"; break;
case 0x4DFC65C6: return "WIDTH"; break;
case 0x551AE6EC: return "Wiggle Meter Drain"; break;
case 0xE752E4CF: return "World Idle Move"; break;
case 0xD43ED9E2: return "ZEROJOINT"; break;
case 0x087BC8D5: return "Zipline"; break;
case 0x1BCF4BAE: return "Zoom End"; break;
case 0x79F7A78F: return "Zoom Middle1"; break;
case 0x79F7A790: return "Zoom Middle2"; break;
case 0xF93F06B5: return "Zoom Start"; break;
		
		
		default: 
		{
			local string s;
			SPrintf( s, "0x%08x", hash );
			return s;
		}
   }
}

string hashConv( uint &hash )
{
	local string s;
	SPrintf( s, "0x%08x", hash );
	return s;
}

typedef struct {
		ubyte type <format=hex>;
		local string name;
		SPrintf(name, "%d", type);
		switch (type)
		{
			case 0x10:
				local uint hash = 0;
				string value;
				name = value;
				break;
			case 0x20:
				uint hash <format=hex>;
				union unkVal {
					float f;
					int i;
					uint x;
				} value;
				SPrintf(name, "%s = 0x%08x, %f, %d", hashLookup(hash), value.x, value.f, value.i);
				break;
			case 0x21:
				uint hash <format=hex>;
				name = hashLookup(hash);
				char value[0x20];
				name += " = " + value;
				break;
			case 0x23:
			case 0x24:
				uint hash <format=hex>;
				name = hashLookup(hash);
				break;
			case 0x40:
				local uint hash <format=hex> = 0;
				name = "0x40";
				break;
			case 0x56:
				uint hash <format=hex>;
				name = hashLookup(hash);
				break;
			case 0x80:
				local uint hash <format=hex> = 0 ;
				string path;
				name = path;
				break;
		}
	} ENTRY <comment=hashConv(hash)>;



LittleEndian();
if (ReadUByte(0) == 0x98)
{
	struct HEADER {
		BigEndian();
		uint magic <format=hex>;
		LittleEndian();
		uint numEntries;
	} header <bgcolor=cLtGray>;
}

local int i;

while (FTell() < FileSize())
{
	ENTRY entry <read=name>;
}

	